name: Build and Deploy pkgdown Site

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pkgdown-${{ github.event_name != 'pull_request' || github.run_id }}

env:
  GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Setup Cachix
        uses: cachix/cachix-action@v14
        with:
          name: rstats-on-nix
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Setup Pages
        if: github.event_name != 'pull_request'
        id: pages
        uses: actions/configure-pages@v4

      - name: Build pkgdown site via Nix
        run: |
          nix-shell \
            --expr 'with import <nixpkgs> {};
                    mkShell {
                      buildInputs = [
                        R
                        rPackages.devtools
                        rPackages.pkgdown
                        rPackages.httr
                        rPackages.jsonlite
                        rPackages.R6
                        rPackages.knitr
                        rPackages.rmarkdown
                        rPackages.ggplot2
                        rPackages.dplyr
                        rPackages.tidyr
                        rPackages.targets
                        rPackages.tarchetypes
                        rPackages.visNetwork
                        pandoc
                        qpdf
                      ];
                    }' \
            --run 'R -e "
            # Build site directly without installing
            # (all dependencies already in Nix environment)
            pkgdown::build_site_github_pages(
              new_process = FALSE,
              install = TRUE,
              examples = TRUE
            )
            "'

      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs

  deploy:
    if: github.event_name != 'pull_request'
    needs: build
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
